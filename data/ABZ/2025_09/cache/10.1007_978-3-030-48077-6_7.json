{
  "apiMessage": "This JSON was provided by Springer Nature",
  "query": "doi:10.1007/978-3-030-48077-6_7",
  "result": [
    {
      "total": "1",
      "start": "1",
      "pageLength": "10",
      "recordsDisplayed": "1"
    }
  ],
  "records": [
    {
      "contentType": "Chapter ConferencePaper",
      "identifier": "doi:10.1007/978-3-030-48077-6_7",
      "language": "en",
      "url": [
        {
          "format": "html",
          "platform": "web",
          "value": "http://link.springer.com/openurl/fulltext?id=doi:10.1007/978-3-030-48077-6_7"
        },
        {
          "format": "pdf",
          "platform": "web",
          "value": "http://link.springer.com/openurl/pdf?id=doi:10.1007/978-3-030-48077-6_7"
        },
        {
          "format": "",
          "platform": "",
          "value": "http://dx.doi.org/10.1007/978-3-030-48077-6_7"
        }
      ],
      "title": "A Logic for Reflective ASMs",
      "creators": [
        {
          "creator": "Schewe, Klaus-Dieter"
        },
        {
          "creator": "Ferrarotti, Flavio"
        }
      ],
      "bookEditors": [
        {
          "bookEditor": "Raschke, Alexander"
        },
        {
          "bookEditor": "Méry, Dominique"
        },
        {
          "bookEditor": "Houdek, Frank"
        }
      ],
      "publicationName": "Rigorous State-Based Methods",
      "openaccess": "false",
      "doi": "10.1007/978-3-030-48077-6_7",
      "publisher": "Springer",
      "publisherName": "Springer International Publishing",
      "publicationDate": "2020-01-01",
      "publicationType": "Book",
      "printIsbn": "978-3-030-48076-9",
      "electronicIsbn": "978-3-030-48077-6",
      "isbn": "978-3-030-48076-9",
      "genre": "OriginalPaper Proceedings",
      "onlineDate": "2020-05-22",
      "seriesId": "558",
      "copyright": "©2020 Springer Nature Switzerland AG",
      "abstract": "Reflective algorithms are algorithms that can modify their own behaviour. Recently a behavioural theory of reflective algorithms has been developed, which shows that they are captured by reflective abstract state machines (rASMs). Reflective ASMs exploit extended states that include an updatable representation of the ASM signature and rules to be executed by the machine in that state. Updates to the representation of ASM signatures and rules are realised by means of a sophisticated tree algebra defined in the background of the rASM. In this paper the theory is taken further by an extension of the logic of ASMs to capture inferences on rASMs. The key is the introduction of terms that are interpreted by ASM rules stored in some location. We show that fragments of the logic with a fixed bound on the number of steps preserve completeness, whereas the full run-logic for rASMs becomes incomplete.",
      "conferenceInfo": [
        {
          "confSeriesName": "International Conference on Rigorous State-Based Methods",
          "confSeriesID": [
            {
              "type": "Springer",
              "value": "abz"
            },
            {
              "type": "DBLP",
              "value": "asm"
            }
          ],
          "confEventID": [
            {
              "type": "Springer",
              "value": "abz2020"
            }
          ],
          "confEventAbbreviation": "ABZ",
          "confNumber": "7",
          "confEventLocation": [
            {
              "city": "Ulm",
              "country": [
                {
                  "code": "DE",
                  "value": "Germany"
                }
              ]
            }
          ],
          "confEventDateStart": [
            {
              "year": "2020",
              "month": "05",
              "day": "27"
            }
          ],
          "confEventDateEnd": [
            {
              "year": "2020",
              "month": "05",
              "day": "29"
            }
          ],
          "confEventURL": "https://abz2020.uni-ulm.de/",
          "confEventPeerReviewInformation": {
            "averageNumberOfPapersPerReviewer": "3",
            "averageNumberOfReviewsPerPaper": "3",
            "externalReviewersInvolved": "No",
            "fullPapersAcceptanceRate": "20",
            "fullPapersAccepted": "12",
            "managementSystem": "EasyChair",
            "shortPapersAccepted": "9",
            "submissionsSentForReview": "61",
            "type": "Single-blind",
            "value": "6 case study contributions, 6 PhD-Symposium-contributions, 2 invited papers. The conference was cancelled due to the COVID-19 pandemic."
          }
        }
      ],
      "keyword": [
        "Abstract state machine",
        "Reflection",
        "Logic",
        "Tree algebra"
      ],
      "subjects": [
        "Computer Science",
        "Mathematical Logic and Formal Languages",
        "Artificial Intelligence",
        "Computer Systems Organization and Communication Networks",
        "Software Engineering",
        "Control Structures and Microprogramming"
      ],
      "disciplines": [
        {
          "id": "6053",
          "term": "Formal Languages and Automata Theory"
        },
        {
          "id": "2970",
          "term": "Artificial Intelligence"
        },
        {
          "id": "4767",
          "term": "Computer Engineering and Networks"
        },
        {
          "id": "5482",
          "term": "Software Engineering"
        },
        {
          "id": "3431",
          "term": "Control Structures and Microprogramming"
        }
      ]
    }
  ],
  "facets": [
    {
      "name": "subject",
      "values": [
        {
          "value": "Artificial Intelligence",
          "count": "1"
        },
        {
          "value": "Computer Science",
          "count": "1"
        },
        {
          "value": "Computer Systems Organization and Communication Networks",
          "count": "1"
        },
        {
          "value": "Control Structures and Microprogramming",
          "count": "1"
        },
        {
          "value": "Mathematical Logic and Formal Languages",
          "count": "1"
        },
        {
          "value": "Software Engineering",
          "count": "1"
        }
      ]
    },
    {
      "name": "keyword",
      "values": [
        {
          "value": "Abstract state machine",
          "count": "1"
        },
        {
          "value": "Logic",
          "count": "1"
        },
        {
          "value": "Reflection",
          "count": "1"
        },
        {
          "value": "Tree algebra",
          "count": "1"
        }
      ]
    },
    {
      "name": "pub",
      "values": [
        {
          "value": "Rigorous State-Based Methods",
          "count": "1"
        }
      ]
    },
    {
      "name": "year",
      "values": [
        {
          "value": "2020",
          "count": "1"
        }
      ]
    },
    {
      "name": "country",
      "values": [
        {
          "value": "Austria",
          "count": "1"
        },
        {
          "value": "China",
          "count": "1"
        }
      ]
    },
    {
      "name": "type",
      "values": [
        {
          "value": "Book",
          "count": "1"
        }
      ]
    }
  ]
}