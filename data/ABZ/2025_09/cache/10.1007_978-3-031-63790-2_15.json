{
  "apiMessage": "This JSON was provided by Springer Nature",
  "query": "doi:10.1007/978-3-031-63790-2_15",
  "result": [
    {
      "total": "1",
      "start": "1",
      "pageLength": "10",
      "recordsDisplayed": "1"
    }
  ],
  "records": [
    {
      "contentType": "Chapter ConferencePaper",
      "identifier": "doi:10.1007/978-3-031-63790-2_15",
      "language": "en",
      "url": [
        {
          "format": "html",
          "platform": "web",
          "value": "http://link.springer.com/openurl/fulltext?id=doi:10.1007/978-3-031-63790-2_15"
        },
        {
          "format": "pdf",
          "platform": "web",
          "value": "http://link.springer.com/openurl/pdf?id=doi:10.1007/978-3-031-63790-2_15"
        },
        {
          "format": "",
          "platform": "",
          "value": "http://dx.doi.org/10.1007/978-3-031-63790-2_15"
        }
      ],
      "title": "Using Symbolic Execution to Transform Turbo Abstract State Machines into Basic Abstract State Machines",
      "creators": [
        {
          "ORCID": "0009-0005-7020-6607",
          "creator": "Del Castillo, Giuseppe"
        }
      ],
      "bookEditors": [
        {
          "bookEditor": "Bonfanti, Silvia"
        },
        {
          "bookEditor": "Gargantini, Angelo"
        },
        {
          "bookEditor": "Leuschel, Michael"
        },
        {
          "bookEditor": "Riccobene, Elvinia"
        },
        {
          "bookEditor": "Scandurra, Patrizia"
        }
      ],
      "publicationName": "Rigorous State-Based Methods",
      "openaccess": "false",
      "doi": "10.1007/978-3-031-63790-2_15",
      "publisher": "Springer",
      "publisherName": "Springer Nature Switzerland",
      "publicationDate": "2024-01-01",
      "publicationType": "Book",
      "printIsbn": "978-3-031-63789-6",
      "electronicIsbn": "978-3-031-63790-2",
      "isbn": "978-3-031-63789-6",
      "genre": "OriginalPaper Proceedings",
      "onlineDate": "2024-06-21",
      "seriesId": "558",
      "copyright": "©2024 The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature Switzerland AG",
      "abstract": "This paper introduces a transformation method that uses symbolic execution to eliminate sequential composition ( $$\\texttt {seq}$$ seq ) rules from turbo ASM rules by translating them into equivalent rules without seq . Under some circumstances $$\\texttt {iterate}$$ iterate rules can also be eliminated. The material presented here is work in progress. A prototype implementation of the transformation is publicly available.",
      "conferenceInfo": [
        {
          "confSeriesName": "International Conference on Rigorous State-Based Methods",
          "confSeriesID": [
            {
              "type": "Springer",
              "value": "abz"
            },
            {
              "type": "DBLP",
              "value": "asm"
            }
          ],
          "confEventID": [
            {
              "type": "Springer",
              "value": "abz2024"
            }
          ],
          "confEventAbbreviation": "ABZ",
          "confNumber": "10",
          "confEventLocation": [
            {
              "locationType": "InPerson",
              "city": "Bergamo",
              "country": [
                {
                  "code": "IT",
                  "value": "Italy"
                }
              ]
            }
          ],
          "confEventDateStart": [
            {
              "year": "2024",
              "month": "06",
              "day": "25"
            }
          ],
          "confEventDateEnd": [
            {
              "year": "2024",
              "month": "06",
              "day": "28"
            }
          ],
          "confEventURL": "https://abz-conf.org/site/2024/"
        }
      ],
      "subjects": [
        "Computer Science",
        "Mathematical Logic and Formal Languages",
        "Computer Systems Organization and Communication Networks",
        "Computer Applications",
        "Logic in AI",
        "Programming Languages, Compilers, Interpreters"
      ],
      "disciplines": [
        {
          "id": "6053",
          "term": "Formal Languages and Automata Theory"
        },
        {
          "id": "4767",
          "term": "Computer Engineering and Networks"
        },
        {
          "id": "3121",
          "term": "Computer and Information Systems Applications"
        },
        {
          "id": "5093",
          "term": "Logic in AI"
        },
        {
          "id": "22727",
          "term": "Compilers and Interpreters"
        }
      ]
    }
  ],
  "facets": [
    {
      "name": "subject",
      "values": [
        {
          "value": "Computer Applications",
          "count": "1"
        },
        {
          "value": "Computer Science",
          "count": "1"
        },
        {
          "value": "Computer Systems Organization and Communication Networks",
          "count": "1"
        },
        {
          "value": "Logic in AI",
          "count": "1"
        },
        {
          "value": "Mathematical Logic and Formal Languages",
          "count": "1"
        },
        {
          "value": "Programming Languages, Compilers, Interpreters",
          "count": "1"
        }
      ]
    },
    {
      "name": "keyword",
      "values": []
    },
    {
      "name": "pub",
      "values": [
        {
          "value": "Rigorous State-Based Methods",
          "count": "1"
        }
      ]
    },
    {
      "name": "year",
      "values": [
        {
          "value": "2024",
          "count": "1"
        }
      ]
    },
    {
      "name": "country",
      "values": [
        {
          "value": "Germany",
          "count": "1"
        }
      ]
    },
    {
      "name": "type",
      "values": [
        {
          "value": "Book",
          "count": "1"
        }
      ]
    }
  ]
}